extends ../../layout

block content
  include ../../mixins/date
  - var checkProject = function (id) {
  -   return !!(_.find(target.projects, function (g) { return g.id == id; } )) ? 'checked' : false;
  - }
  h1= edit ? __('Edit target') : __('New target')
  
  .btn-group(role='toolbar')
    if edit
      a.btn.btn-lg.btn-default(href='/targets/' + target.id title='View this target' role='button')
        span.fa.fa-eye.fa-lg
    else
      a.btn.btn-lg.btn-default(href='/targets?current=true' title='List of current targets')
        span.fa.fa-bullseye.fa-lg
      a.btn.btn-lg.btn-default(href='/projects/new' title='Create new project')
        span.fa.fa-lg.fa-plus
        |  
        span.fa.fa-lg.fa-file-o
    if edit
      include toolbar
  p

  form.form-horizontal(method='post')
    input(type='hidden' name='_csrf', value=csrf)
    input#zoneOffset(type='hidden' name='zoneOffset' value=target.zoneOffset || '')
    
    - var nameErr = _.find(validate, function(err) { return err.path === 'name' || err.path === 'uniqueName'; }) || ''
    
    .form-group(class=(nameErr ? 'has-error' : ''))
      label.col-md-2.control-label(for='name')= __('Name')
      .col-md-10
        input#name.form-control(type='text' name='name' placeholder=__('Name') value=target.name aria-describedby='namehelp')
        span#namehelp.help-block= __(nameErr ? nameErr.message : 'A unique name for this target so you can find it later.')
        
    - var wcErr = _.find(validate, { path: 'count' }) || ''

    .form-group(class=(wcErr ? 'has-error' : ''))
      label.col-md-2.control-label(for='count')= __('Target word count')
      .col-md-10
        input#count.form-control(type='number' name='count' placeholder=__('Target count') value=target.count aria-describedby='wchelp')
        span#wchelp.help-block= __(wcErr ? wcErr.message : 'The amount you want to have by the end of the target period (may be blank).')

    - var unitErr = _.find(validate, { path: 'unit' }) || ''

    .form-group(class=(unitErr ? 'has-error' : ''))
      label.col-md-2.control-label(for='unit')= 'Unit'
      .col-md-10
        select#unit.form-control(name='unit' aria-describedby='unithelp')
          for unit, key in targetunits
            option(value=key selected=key == target.unit)= unit
        span#unithelp.help-block= unitErr ? unitErr.message : 'The unit you want to track (words or characters).'
        
    - var startErr = _.find(validate, function(err) { return err.path === 'start' || err.path === 'startBeforeEnd'; }) || ''
    
    .form-group(class=(startErr ? 'has-error' : ''))
      label.col-md-2.control-label(for='start')= __('Start date')
      .col-md-10
        .input-group.date#startpicker
          span.input-group-addon
            span.fa.fa-fw.fa-calendar
          input#start.form-control(type='text' name='start' placeholder=__('Start date') value=target.start aria-describedby='starthelp')
        span#starthelp.help-block= __(startErr ? startErr.message : 'When will (or did) this target\'s period start.')
          
    - var endErr = _.find(validate, function(err) { return err.path === 'end' || err.path === 'startBeforeEnd'; }) || ''
    
    .form-group(class=(endErr ? 'has-error' : ''))
      label.col-md-2.control-label(for='end')= __('End date')
      .col-md-10
        .input-group.date#endpicker
          span.input-group-addon
              span.fa.fa-fw.fa-calendar
          input#end.form-control(type='text' name='end' placeholder=__('End date') value=target.end aria-describedby='endhelp')
        span#endhelp.help-block= __(endErr ? endErr.message : 'When will (or did) this target\'s period end.')
    
    .form-group
      label.col-md-2.control-label Total days
      .col-md-10
        - var totalDays = moment.utc(target.end, user.settings.dateFormat).diff(moment.utc(target.start, user.settings.dateFormat), 'days') + 1
        p#totaldays.control-static= isNaN(totalDays) ? 'Invalid date' : totalDays
        span#help.help-block The total of days selected (including the start and end).
        
    .form-group
      label.col-md-2.control-label(for='notes')= __('Notes')
      .col-md-10
        textarea#notes.form-control(rows='3' name='notes' placeholder=__('Notes') aria-describedby='noteshelp')= target.notes
        span#noteshelp.help-block Any notes you want to keep for yourself about this target.
        
    .form-group#projects
      .col-md-12
        for chunk, i in projects
          .row
            if i === 0
              label.col-md-2.control-label Projects
            .col-md-3(class= i !== 0 ? 'col-md-offset-2' : '')
              .checkbox
                label
                  input(type='checkbox', name='projects[]' value=chunk[0].id checked=checkProject(chunk[0].id))
                  = chunk[0].name
            if chunk[1]
              .col-md-3
                .checkbox
                  label
                    input(type='checkbox', name='projects[]' value=chunk[1].id checked=checkProject(chunk[1].id))
                    = chunk[1].name
            if chunk[2]
              .col-md-3
                .checkbox
                  label
                    input(type='checkbox', name='projects[]' value=chunk[2].id checked=checkProject(chunk[2].id))
                    = chunk[2].name
        .row
          .col-md-offset-2.col-md-10
            span#projectshelp.help-block Select the projects that will count as fulfilling this target.
    include ../../mixins/single-form-buttons
    
append scripts
  script(type='text/javascript', src='/bower_components/moment/min/moment-with-locales.min.js')
  script(type='text/javascript', src='/bower_components/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js')
  script.
    $(document).ready(function () {
      $('#startpicker').datetimepicker({
        format: '!{user.settings.dateFormat}'
        !{target.end ? ", maxDate: moment.utc('" + target.end + "', '" + user.settings.dateFormat + "').add(1, 'day')" : '' }
      });
      $('#endpicker').datetimepicker({
        format: '!{user.settings.dateFormat}'
        !{target.start ? ", minDate: moment.utc('" + target.start + "', '" + user.settings.dateFormat + "').subtract(1, 'day')" : '' }
      });
      $('#zoneOffset').val(moment().utcOffset());
      $('#startpicker').on('dp.change', function (e) {
        if (!e.date) { 
          $('#totaldays').html('Invalid date');
          return; 
        }
        var endPicker = $('#endpicker').data("DateTimePicker");
        endPicker.minDate(moment.utc(e.date).add('1', 'day'));
        var totalDays = (moment.utc(endPicker.date()).diff(moment.utc(e.date), 'days') + 1);
        $('#totaldays').html(isNaN(totalDays) ? 'Invalid date' : totalDays.toString());
      });
      $('#endpicker').on('dp.change', function (e) {
        if (!e.date) { 
          $('#totaldays').html('Invalid date');
          return; 
        }
        var startPicker = $('#startpicker').data("DateTimePicker");
        startPicker.maxDate(moment.utc(e.date).subtract('1', 'day'));
        var totalDays = (moment.utc(e.date).diff(moment.utc(startPicker.date()), 'days') + 1);
        $('#totaldays').html(isNaN(totalDays) ? 'Invalid date' : totalDays.toString());
      });
    })
  if user.settings.showTour
    script
      | tour(jQuery, hopscotch, range(31, 33));
append styles
  link(rel='stylesheet', href='/bower_components/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css')
